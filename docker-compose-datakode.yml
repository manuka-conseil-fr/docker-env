version: '3'

services:
  wireguard:
    image: linuxserver/wireguard
    container_name: wireguard
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Paris
      - SERVERURL="" ###ip publique du serveur h√¥te
      - SERVERPORT=51820
      - PEERS=mon-client1,mon-client2 ### permet de generer les configurations pour les clients vpn
      - PEERDNS=auto
      - INTERNAL_SUBNET=10.13.13.0
      - ALLOWEDIPS=0.0.0.0/0
    volumes:
      - ./wireguard/config:/config
      - ./wireguard/lib/modules:/lib/modules
    ports:
      - 51820:51820/udp
    restart: unless-stopped
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
      - net.ipv4.ip_forward=1
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    networks:
      wgnet:
        ipv4_address: 10.0.0.2

  postgres:
    image: kartoza/postgis:14
    ports:
      - ${POSTGRES_PUBLIC_PORT:-5435}:5432
    environment:
      - POSTGRES_DB=${DB_DATABASE:-postgres}
      - POSTGRES_USER=${DB_USERNAME:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-secret}
    volumes:
      - bd66-postgresql:/var/lib/postgresql/
    networks:
      wgnet:
        ipv4_address: 10.0.0.3

    healthcheck:
      test: "PGPASSWORD=${DB_PASSWORD} pg_isready -h 127.0.0.1 -U ${DB_USERNAME} -d ${DB_DATABASE}"
      retries: 3
      timeout: 5s

  php:
    container_name: ${APP_NAME}-laravel
    image: ${DOCKER_IMAGE_PHP:-bd66}
    depends_on:
      - postgres
    ports:
      - 127.0.0.1:${APP_PORT:-8080}:80
    networks:
      wgnet:
        ipv4_address: 10.0.0.4

volumes:
  bd66-postgresql:

networks:
  wgnet:
    driver: bridge
    ipam:
      config:
        - subnet: 10.0.0.0/24